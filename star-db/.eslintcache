[{"C:\\Users\\Евгений\\Desktop\\react\\star-db\\src\\index.js":"1","C:\\Users\\Евгений\\Desktop\\react\\star-db\\src\\components\\app\\index.js":"2","C:\\Users\\Евгений\\Desktop\\react\\star-db\\src\\components\\app\\app.js":"3","C:\\Users\\Евгений\\Desktop\\react\\star-db\\src\\components\\header\\index.js":"4","C:\\Users\\Евгений\\Desktop\\react\\star-db\\src\\components\\header\\header.js":"5","C:\\Users\\Евгений\\Desktop\\react\\star-db\\src\\components\\radnom-planet\\index.js":"6","C:\\Users\\Евгений\\Desktop\\react\\star-db\\src\\components\\radnom-planet\\random-planet.js":"7","C:\\Users\\Евгений\\Desktop\\react\\star-db\\src\\components\\person-details\\index.js":"8","C:\\Users\\Евгений\\Desktop\\react\\star-db\\src\\components\\person-details\\person-details.js":"9","C:\\Users\\Евгений\\Desktop\\react\\star-db\\src\\components\\item-list\\index.js":"10","C:\\Users\\Евгений\\Desktop\\react\\star-db\\src\\components\\item-list\\item-list.js":"11","C:\\Users\\Евгений\\Desktop\\react\\star-db\\src\\services\\swapi.js":"12","C:\\Users\\Евгений\\Desktop\\react\\star-db\\src\\components\\spinner\\index.js":"13","C:\\Users\\Евгений\\Desktop\\react\\star-db\\src\\components\\spinner\\spinner.js":"14","C:\\Users\\Евгений\\Desktop\\react\\star-db\\src\\components\\error-indicator\\index.js":"15","C:\\Users\\Евгений\\Desktop\\react\\star-db\\src\\components\\error-indicator\\error-indicator.js":"16","C:\\Users\\Евгений\\Desktop\\react\\star-db\\src\\components\\people-page\\index.js":"17","C:\\Users\\Евгений\\Desktop\\react\\star-db\\src\\components\\people-page\\people-page.js":"18","C:\\Users\\Евгений\\Desktop\\react\\star-db\\src\\components\\row\\index.js":"19","C:\\Users\\Евгений\\Desktop\\react\\star-db\\src\\components\\row\\row.js":"20"},{"size":175,"mtime":1609186094897,"results":"21","hashOfConfig":"22"},{"size":77,"mtime":1609185797532,"results":"23","hashOfConfig":"22"},{"size":530,"mtime":1610042203899,"results":"24","hashOfConfig":"22"},{"size":108,"mtime":1609186016304,"results":"25","hashOfConfig":"22"},{"size":524,"mtime":1609186638408,"results":"26","hashOfConfig":"22"},{"size":134,"mtime":1609186973760,"results":"27","hashOfConfig":"22"},{"size":3403,"mtime":1609960087188,"results":"28","hashOfConfig":"22"},{"size":142,"mtime":1610041820445,"results":"29","hashOfConfig":"22"},{"size":2708,"mtime":1609962330198,"results":"30","hashOfConfig":"22"},{"size":92,"mtime":1609426711394,"results":"31","hashOfConfig":"22"},{"size":1307,"mtime":1610042650535,"results":"32","hashOfConfig":"22"},{"size":2617,"mtime":1610040673727,"results":"33","hashOfConfig":"22"},{"size":111,"mtime":1609518540538,"results":"34","hashOfConfig":"22"},{"size":482,"mtime":1609518505076,"results":"35","hashOfConfig":"22"},{"size":141,"mtime":1609533300382,"results":"36","hashOfConfig":"22"},{"size":349,"mtime":1609533300377,"results":"37","hashOfConfig":"22"},{"size":126,"mtime":1610041438429,"results":"38","hashOfConfig":"22"},{"size":1057,"mtime":1610043014370,"results":"39","hashOfConfig":"22"},{"size":97,"mtime":1610042451417,"results":"40","hashOfConfig":"22"},{"size":339,"mtime":1610042501051,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"1vjw7bi",{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"44"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"44"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"44"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"44"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"44"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"44"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"44"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"44"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"44"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Евгений\\Desktop\\react\\star-db\\src\\index.js",[],["93","94"],"C:\\Users\\Евгений\\Desktop\\react\\star-db\\src\\components\\app\\index.js",["95"],"import React from 'react';\r\nimport app from './app';\r\n\r\nexport default app;\r\n","C:\\Users\\Евгений\\Desktop\\react\\star-db\\src\\components\\app\\app.js",["96"],"C:\\Users\\Евгений\\Desktop\\react\\star-db\\src\\components\\header\\index.js",["97"],"import React from 'react';\r\nimport './header.css';\r\nimport header from'./header'\r\n\r\nexport default header;\r\n","C:\\Users\\Евгений\\Desktop\\react\\star-db\\src\\components\\header\\header.js",["98","99","100"],"import React from 'react';\r\n\r\nconst Header = () => {\r\n    \r\n    return(\r\n        <header className='header'>\r\n            <div className=\"header__logo\">\r\n                Star DB\r\n            </div>\r\n            <ul className='nav'>\r\n                <li className='nav__item'><a href=\"#\">People</a></li>\r\n                <li className='nav__item'><a href=\"#\">Planets</a></li>\r\n                <li className='nav__item'><a href=\"#\">Starships</a></li>\r\n            </ul>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header;\r\n","C:\\Users\\Евгений\\Desktop\\react\\star-db\\src\\components\\radnom-planet\\index.js",["101"],"import React from 'react';\r\nimport './random-planet.css'\r\nimport RandomPlanet from './random-planet'\r\n\r\nexport default RandomPlanet;\r\n","C:\\Users\\Евгений\\Desktop\\react\\star-db\\src\\components\\radnom-planet\\random-planet.js",["102"],"import React, {Component} from 'react';\r\nimport SwapiService from \"../../services/swapi\";\r\nimport Spinner from \"../spinner\";\r\nimport ErrorIndicator from \"../error-indicator\";\r\n\r\nexport default class RandomPlanet extends Component {\r\n\r\n    swapiService = new SwapiService();\r\n\r\n    state = {\r\n        planet: {},\r\n        loading: true,\r\n        error: false\r\n    }\r\n\r\n    componentDidMount() {\r\n        //компонент подключен (DOM уже на странице)\r\n        //Используется для инициализации\r\n        //Не используйте конструктор для кода который создает побочные эффекты\r\n        this.updatePlanet();\r\n        this.interval = setInterval(this.updatePlanet, 10000);\r\n        console.log('componentDidMount()');\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        //компонент обновился\r\n        console.log('componentDidUpdate()');\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        //отрабатывает после удаления\r\n        clearInterval(this.interval);\r\n        console.log('componentWillUnmount()');\r\n    }\r\n\r\n    componentDidCatch() {\r\n        //когда в компоненте произошла ошибка\r\n        console.log('componentDidCatch()');\r\n    }\r\n\r\n    getRandomInRange(min, max) {\r\n        return Math.floor(Math.random() * (max - min + 1)) + min;\r\n    }\r\n\r\n    onPlanetLoaded = (planet) => {\r\n        this.setState({\r\n            planet,\r\n            loading: false,\r\n            error: false\r\n        });\r\n    }\r\n\r\n    onError = (err) => {\r\n        this.setState({\r\n            loading: false,\r\n            error: true\r\n        })\r\n    };\r\n\r\n    updatePlanet = () => {\r\n        const id = this.getRandomInRange(1, 20);\r\n\r\n        this.swapiService\r\n            .getPlanet(id)\r\n            .then(this.onPlanetLoaded)\r\n            .catch(this.onError);\r\n    }\r\n\r\n    TestURL = (url) => {\r\n        const request = new XMLHttpRequest();\r\n\r\n        request.open('HEAD', url, false);\r\n        request.send();\r\n        return request.status != 404;\r\n    }\r\n\r\n    render() {\r\n        const { planet, loading, error } = this.state;\r\n\r\n        const hasData = !(loading || error);\r\n\r\n        const errorMessage = error ? <ErrorIndicator/> : null ;\r\n        const spinner = loading ? <Spinner/> : null;\r\n        const content = hasData ? <PlanetView planet={planet}/> : null;\r\n\r\n        return(\r\n            <div className=\"random-planet\">\r\n                {spinner}\r\n                {content}\r\n                {errorMessage}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst PlanetView = ({planet}) => {\r\n\r\n    const {  id, name, population, rotationPeriod, diameter}  = planet;\r\n\r\n    return(\r\n        <React.Fragment>\r\n            <div className=\"random-planet__image\">\r\n                <img className='planet-image' src={`https://starwars-visualguide.com/assets/img/planets/${id}.jpg`} alt=\"\"/>\r\n            </div>\r\n            <div className=\"random-planet__info\">\r\n                <h2 className='random-planet__header'>{name}</h2>\r\n                <ul className=\"random-planet__list\">\r\n                    <li>Population: {population}</li>\r\n                    <li>Rotation period: {rotationPeriod}</li>\r\n                    <li>Diameter: {diameter}</li>\r\n                </ul>\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n","C:\\Users\\Евгений\\Desktop\\react\\star-db\\src\\components\\person-details\\index.js",["103"],"import React from 'react';\r\nimport './person-details.css'\r\nimport PersonalDetails from './person-details'\r\n\r\nexport default PersonalDetails;\r\n","C:\\Users\\Евгений\\Desktop\\react\\star-db\\src\\components\\person-details\\person-details.js",[],"C:\\Users\\Евгений\\Desktop\\react\\star-db\\src\\components\\item-list\\index.js",["104"],"import React from 'react';\r\nimport ItemList from './item-list'\r\n\r\nexport default ItemList;\r\n","C:\\Users\\Евгений\\Desktop\\react\\star-db\\src\\components\\item-list\\item-list.js",["105"],"C:\\Users\\Евгений\\Desktop\\react\\star-db\\src\\services\\swapi.js",["106"],"export default class SwapiService {\r\n    _apiBase = 'https://swapi.dev/api';\r\n\r\n    async getResource(url) {\r\n        const res = await fetch(`${this._apiBase}${url}`);\r\n\r\n        if(!res.ok) {\r\n            //описание ошибки\r\n            throw new Error(`could not fatch ${url}`\r\n                + ` received ${res.status}`)\r\n        }\r\n\r\n        return await res.json();\r\n    }\r\n\r\n     getAllPeople = async () => {\r\n        const  res = await this.getResource(`/people/`);\r\n        return res.results.map(this._transformPerson);\r\n    }\r\n\r\n    getPerson= async (id) => {\r\n        const person = await this.getResource(`/people/${id}/`);\r\n        return this._transformPerson(person);\r\n    }\r\n\r\n    getAllPlanets = async () => {\r\n        const  res = await this.getResource(`/planets/`);\r\n        return res.results.map(this._transformPlanet);\r\n    }\r\n\r\n    getPlanet = async (id) => {\r\n        const planet = await this.getResource(`/planets/${id}/`);\r\n        return this._transformPlanet(planet);\r\n    }\r\n\r\n    getAllStarShips = async () => {\r\n        const  res = await this.getResource(`/starships/`);\r\n        return res.results.map(this._transformStarShips);\r\n    }\r\n\r\n    getStarShip = async (id) => {\r\n        const starship = await this.getResource(`/starships/${id}/`);\r\n        return this._transformStarShips(starship);\r\n    }\r\n\r\n    _extractId = (item) => {\r\n        const idRegExp =/\\/([0-9]*)\\/$/;\r\n        return  item.url.match(idRegExp)[1];\r\n    }\r\n\r\n    _transformPlanet = (planet) => {\r\n        return {\r\n            id: this._extractId(planet),\r\n            name: planet.name,\r\n            population: planet.population,\r\n            rotationPeriod:  planet.rotation_period,\r\n            diameter: planet.diameter\r\n        }\r\n    }\r\n\r\n    _transformStarShips = (starship) => {\r\n        return {\r\n            id:this._extractId(starship),\r\n            name: starship.name,\r\n            model: starship.model,\r\n            manufacturer: starship.manufacturer,\r\n            costInCredits: starship.cost_in_credits,\r\n            length: starship.length,\r\n            crew: starship.crew,\r\n            passengers: starship.passengers,\r\n            cargoCapacity: starship.cargo_capacity,\r\n        }\r\n    }\r\n\r\n    _transformPerson = (person) => {\r\n        return {\r\n            id:this._extractId(person),\r\n            name: person.name,\r\n            gender: person.gender,\r\n            birthYear: person.birth_year,\r\n            eyeColor: person.eye_color,\r\n        }\r\n    }\r\n}\r\n\r\nconst swapi = new SwapiService();\r\n\r\n// swapi.getPerson(4).then((p) => {\r\n//     console.log(p);\r\n// });\r\n","C:\\Users\\Евгений\\Desktop\\react\\star-db\\src\\components\\spinner\\index.js",["107"],"import React from 'react'\r\nimport Spinner from './spinner'\r\nimport './spinner.css'\r\n\r\nexport default Spinner;\r\n","C:\\Users\\Евгений\\Desktop\\react\\star-db\\src\\components\\spinner\\spinner.js",[],"C:\\Users\\Евгений\\Desktop\\react\\star-db\\src\\components\\error-indicator\\index.js",["108"],"import React from 'react'\r\nimport ErrorIndicator from \"./error-indicator\";\r\nimport './error-indicator.css'\r\n\r\nexport default ErrorIndicator\r\n","C:\\Users\\Евгений\\Desktop\\react\\star-db\\src\\components\\error-indicator\\error-indicator.js",[],"C:\\Users\\Евгений\\Desktop\\react\\star-db\\src\\components\\people-page\\index.js",["109"],"C:\\Users\\Евгений\\Desktop\\react\\star-db\\src\\components\\people-page\\people-page.js",[],"C:\\Users\\Евгений\\Desktop\\react\\star-db\\src\\components\\row\\index.js",["110"],"C:\\Users\\Евгений\\Desktop\\react\\star-db\\src\\components\\row\\row.js",[],{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","replacedBy":"114"},{"ruleId":"115","severity":1,"message":"116","line":1,"column":8,"nodeType":"117","messageId":"118","endLine":1,"endColumn":13},{"ruleId":"115","severity":1,"message":"119","line":5,"column":8,"nodeType":"117","messageId":"118","endLine":5,"endColumn":20},{"ruleId":"115","severity":1,"message":"116","line":1,"column":8,"nodeType":"117","messageId":"118","endLine":1,"endColumn":13},{"ruleId":"120","severity":1,"message":"121","line":11,"column":43,"nodeType":"122","endLine":11,"endColumn":55},{"ruleId":"120","severity":1,"message":"121","line":12,"column":43,"nodeType":"122","endLine":12,"endColumn":55},{"ruleId":"120","severity":1,"message":"121","line":13,"column":43,"nodeType":"122","endLine":13,"endColumn":55},{"ruleId":"115","severity":1,"message":"116","line":1,"column":8,"nodeType":"117","messageId":"118","endLine":1,"endColumn":13},{"ruleId":"123","severity":1,"message":"124","line":74,"column":31,"nodeType":"125","messageId":"126","endLine":74,"endColumn":33},{"ruleId":"115","severity":1,"message":"116","line":1,"column":8,"nodeType":"117","messageId":"118","endLine":1,"endColumn":13},{"ruleId":"115","severity":1,"message":"116","line":1,"column":8,"nodeType":"117","messageId":"118","endLine":1,"endColumn":13},{"ruleId":"115","severity":1,"message":"119","line":2,"column":8,"nodeType":"117","messageId":"118","endLine":2,"endColumn":20},{"ruleId":"115","severity":1,"message":"127","line":86,"column":7,"nodeType":"117","messageId":"118","endLine":86,"endColumn":12},{"ruleId":"115","severity":1,"message":"116","line":1,"column":8,"nodeType":"117","messageId":"118","endLine":1,"endColumn":13},{"ruleId":"115","severity":1,"message":"116","line":1,"column":8,"nodeType":"117","messageId":"118","endLine":1,"endColumn":13},{"ruleId":"115","severity":1,"message":"116","line":1,"column":8,"nodeType":"117","messageId":"118","endLine":1,"endColumn":13},{"ruleId":"115","severity":1,"message":"116","line":1,"column":8,"nodeType":"117","messageId":"118","endLine":1,"endColumn":13},"no-native-reassign",["128"],"no-negated-in-lhs",["129"],"no-unused-vars","'React' is defined but never used.","Identifier","unusedVar","'SwapiService' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'swapi' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]